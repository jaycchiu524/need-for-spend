version: '3'

# x-common-variables: &common-variables
#   POSTGRES_USER: postgres
#   POSTGRES_PASSWORD: password

volumes:
  mysql_sandbox_data:
  mysql_development_data:

services:
  db:
    container_name: db
    image: mysql:8.0
    # NOTE: use of "mysql_native_password" is not recommended: https://dev.mysql.com/doc/refman/8.0/en/upgrading-from-previous-series.html#upgrade-caching-sha2-password
    # (this is just an example, not intended to be a production configuration)
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_USER: $DATABASE_USER
      MYSQL_ROOT_PASSWORD: $DATABASE_PASSWORD
      MYSQL_DATABASE: finme
    ports:
      - $DATABASE_PORT:3306
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost', '-u$$DATABASE_USER', '-p$$DATABASE_PASSWORD']
      interval: 10s
      timeout: 10s
      retries: 5
    volumes:
      - 'mysql_${PLAID_ENV}_data:/var/lib/mysql'

  api:
    container_name: api
    build:
      context: .
      dockerfile: ./packages/server/Dockerfile
    restart: always
    ports:
      - $SERVER_PORT:8080
    environment:
      PLAID_SECRET:
      PLAID_ENV:
      PLAID_PRODUCTS:
      PLAID_COUNTRY_CODES:
      PLAID_REDIRECT_URI:
      # APP Configuration
      SERVER_PORT:
      ADMIN_PASSWORD:
      # DATABASE
      DATABASE_USER:
      DATABASE_PASSWORD:
      DATABASE_PORT:
      # JWT
      JWT_SECRET:
      DATABASE_URL: 'mysql://${DATABASE_USER}:${DATABASE_PASSWORD}@db:${DATABASE_PORT}/finme'
    depends_on:
      - db
  
  web:
    container_name: web
    build:
      context: .
      dockerfile: ./packages/client/Dockerfile

      # Next.js requires the following environment variables to be set at build time
      args:
        - NEXT_PUBLIC_API_URL=http://localhost:8080
    restart: always
    ports:
      - 3000:3000
    depends_on:
      - api

    # networks:
    #   - app_network
    # Define a network, which allows containers to communicate
    # with each other, by using their container name as a hostname
    # networks:
    #   app_network:
    #     external: true
